{"version":3,"sources":["../../src/pages/login/login.ts","../../src/pages/source-route/source-route.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/auth-service/auth-service.ts","../../src/providers/route-service/route-service.ts","../../src/pages/dest-route/dest-route.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController,AlertController, NavParams } from 'ionic-angular';\nimport {AuthServiceProvider} from '../../providers/auth-service/auth-service';\nimport {SourceRoutePage} from '../../pages/source-route/source-route';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  loginCredentials = { email: '', password: '' };\n  constructor(public navCtrl: NavController, private alertCtrl: AlertController, public navParams: NavParams, private auth: AuthServiceProvider) {\n  }\n\n  public createAccount() {\n    this.navCtrl.push('RegisterPage');\n  }\n \n  public login() {\n    \n    this.auth.login(this.loginCredentials).subscribe(allowed => {\n      if (allowed) {  \n        //login success, pick mbta routes\n        this.navCtrl.setRoot(SourceRoutePage);\n      } else {\n        this.showError(\"Have you created an account?\");\n      }\n    });\n    // },\n    //   error => {\n    //     this.showError(error);\n    //   });\n  }\n \n  showError(text) {\n \n    let alert = this.alertCtrl.create({\n      title: 'Something\\'s not right',\n      subTitle: text,\n      buttons: ['x']\n    });\n    alert.present();\n  }\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { DestRoutePage } from '../dest-route/dest-route'; \nimport { RouteServiceProvider } from '../../providers/route-service/route-service';\n\n/**\n * Generated class for the SourceRoutePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-source-route',\n  templateUrl: 'source-route.html',\n  providers: [RouteServiceProvider]\n})\nexport class SourceRoutePage {\n\n  public routes = new Array();\n  private destinationPage;\n\n  constructor(public navCtrl: NavController, public routeServiceProvider: RouteServiceProvider) {\n    \n    routeServiceProvider.getRoutes().subscribe(routes => {\n      console.log('routes', routes);\n      this.routes = routes;\n    })\n\n    // this.routes.push(\"route 1\");\n    // this.routes.push(\"route 2\");\n    // this.routes.push(\"route 3\");\n\n    this.destinationPage = DestRoutePage;\n  }\n\n  loadDestination(route) {\n    console.log(route);\n    this.navCtrl.push(this.destinationPage, {routeName: route});\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SourceRoutePage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/source-route/source-route.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 112;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 112\n// module chunks = 4","var map = {\n\t\"../pages/dest-route/dest-route.module\": [\n\t\t281,\n\t\t3\n\t],\n\t\"../pages/login/login.module\": [\n\t\t282,\n\t\t2\n\t],\n\t\"../pages/register/register.module\": [\n\t\t283,\n\t\t0\n\t],\n\t\"../pages/source-route/source-route.module\": [\n\t\t284,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 154\n// module chunks = 4","\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the AuthServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\nexport class User {\n  name: string;\n  email: string;\n \n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n}\n\n@Injectable()\nexport class AuthServiceProvider {\n\n  currentUser: User;\n\n  constructor(public http: Http) {\n     console.log('Hello AuthServiceProvider Provider');\n  }\n\n  public login(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n        let body = JSON.stringify(credentials);\n        let headers      = new Headers({ 'Content-Type': 'application/json' }); // ... Set content type to JSON\n\n        let options       = new RequestOptions({ headers: headers }); // Create \n        \n        //todo move the url out to config\n         this.http.post('http://localhost:3000/login', body, options) // ...using post request\n                           .map(res => res.json()) // ...and calling .json() on the response to return data\n                          // .catch((error:any) => Observable.throw(error.json().error || 'Server error')); //...errors if any\n                           .subscribe (data =>{\n                                observer.next(data.allowed);\n                                observer.complete();      \n                           });            \n      });\n    }\n  }\n\n  public register(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      return Observable.create(observer => {\n        let body = JSON.stringify(credentials);\n        let headers      = new Headers({ 'Content-Type': 'application/json' }); // ... Set content type to JSON\n\n        let options       = new RequestOptions({ headers: headers }); // Create \n        \n        //todo move the url out to config\n         this.http.post('http://localhost:3000/register', body, options) // ...using post request\n                           .map(res => res.json()) // ...and calling .json() on the response to return data\n                          // .catch((error:any) => Observable.throw(error.json().error || 'Server error')); //...errors if any\n                           .subscribe (data =>{\n                                observer.next(data.success);\n                                observer.complete();      \n                           });            \n      });\n    }\n  }\n  // public register(credentials) {\n  //   if (credentials.email === null || credentials.password === null) {\n  //     return Observable.throw(\"Please insert credentials\");\n  //   } else {\n  //     // At this point store the credentials to your backend!\n  //     return Observable.create(observer => {\n  //       observer.next(true);\n  //       observer.complete();\n  //     });\n  //   }\n  // }\n\n  public getUserInfo() : User {\n    return this.currentUser;\n  }\n \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service/auth-service.ts","import { HttpClient } from '@angular/common/http';\nimport {Http} from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\n/*\n  Generated class for the RouteServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class RouteServiceProvider {\n\n  constructor(public http: Http) {\n    console.log('Hello RouteServiceProvider Provider');\n  }\n\n  getRoutes(){\n    return this.http.get('http://localhost:3000/routes')\n    .map(res => res.json() );\n //   .map(res => res.results);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/route-service/route-service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the DestRoutePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-dest-route',\n  templateUrl: 'dest-route.html',\n})\nexport class DestRoutePage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad DestRoutePage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dest-route/dest-route.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HttpModule } from '@angular/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\nimport { SourceRoutePage } from '../pages/source-route/source-route';\nimport { AuthServiceProvider } from '../providers/auth-service/auth-service';\nimport { RouteServiceProvider } from '../providers/route-service/route-service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    LoginPage,\n    SourceRoutePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    LoginPage,\n    SourceRoutePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    AuthServiceProvider,\n    RouteServiceProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}